{"ast":null,"code":"var _jsxFileName = \"/home/alberto/Documents/cami/react-app-ditar/src/components/list/List.jsx\";\nimport React from 'react';\nimport Car from '../car/Car';\nimport { get } from '../../api/request';\nimport { Container, Row, Col } from 'react-grid-system'; // Statefull component\n\nclass List extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const dataFetch = await get();\n      this.setState({\n        isLoaded: true,\n        items: dataFetch.data\n      });\n    } catch (error) {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.items) {\n      return null;\n    } else {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.state.items.map(car => React.createElement(Car, {\n        key: car.id,\n        model: car.model,\n        make: car.make,\n        trim: car.trim,\n        fuelType: car.fueltype,\n        year: car.year,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\n\n;\nexport default List;","map":{"version":3,"sources":["/home/alberto/Documents/cami/react-app-ditar/src/components/list/List.jsx"],"names":["React","Car","get","Container","Row","Col","List","Component","state","error","isLoaded","items","componentDidMount","dataFetch","setState","data","render","map","car","id","model","make","trim","fueltype","year"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAAQC,GAAR,QAAkB,mBAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,mBAApC,C,CAEA;;AACA,MAAMC,IAAN,SAAmBN,KAAK,CAACO,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAI/BC,KAJ+B,GAIvB;AACJC,MAAAA,KAAK,EAAE,IADH;AAEJC,MAAAA,QAAQ,EAAE,KAFN;AAGJC,MAAAA,KAAK,EAAE;AAHH,KAJuB;AAAA;;AAU/B,QAAMC,iBAAN,GAA0B;AACtB,QAAI;AACA,YAAMC,SAAS,GAAG,MAAMX,GAAG,EAA3B;AACA,WAAKY,QAAL,CAAc;AACVJ,QAAAA,QAAQ,EAAE,IADA;AAEVC,QAAAA,KAAK,EAAEE,SAAS,CAACE;AAFP,OAAd;AAIH,KAND,CAME,OAAON,KAAP,EAAc;AACZ,WAAKK,QAAL,CAAc;AACVJ,QAAAA,QAAQ,EAAE,IADA;AAEVD,QAAAA;AAFU,OAAd;AAIH;AACJ;;AAEDO,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKR,KAAL,CAAWG,KAAhB,EAAuB;AACnB,aAAO,IAAP;AACH,KAFD,MAEO;AACH,aACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKH,KAAL,CAAWG,KAAX,CAAiBM,GAAjB,CAAqBC,GAAG,IAErB,oBAAC,GAAD;AACI,QAAA,GAAG,EAAEA,GAAG,CAACC,EADb;AAEI,QAAA,KAAK,EAAED,GAAG,CAACE,KAFf;AAGI,QAAA,IAAI,EAAEF,GAAG,CAACG,IAHd;AAII,QAAA,IAAI,EAAEH,GAAG,CAACI,IAJd;AAKI,QAAA,QAAQ,EAAEJ,GAAG,CAACK,QALlB;AAMI,QAAA,IAAI,EAAEL,GAAG,CAACM,IANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFH,CADL,CADJ;AAeH;AAEJ;;AA9C8B;;AA+ClC;AAED,eAAelB,IAAf","sourcesContent":["import React from 'react';\nimport Car from '../car/Car';\nimport {get} from '../../api/request';\nimport { Container, Row, Col } from 'react-grid-system';\n\n// Statefull component\nclass List extends React.Component {\n\n    // No es necesario utilizar un constructor, si solo vas a usarlo para declarar el state, puedes sacarlo, asi\n    // como lo tengo de esta manera \n    state = {\n        error: null,\n        isLoaded: false,\n        items: []\n    };\n\n    async componentDidMount() {\n        try {\n            const dataFetch = await get();\n            this.setState({\n                isLoaded: true,\n                items: dataFetch.data\n            })\n        } catch (error) {\n            this.setState({\n                isLoaded: true,\n                error\n            })\n        }\n    }\n\n    render() {\n        if (!this.state.items) {\n            return null\n        } else {\n            return (\n                <Container>\n                    {this.state.items.map(car =>\n                        \n                        <Car \n                            key={car.id} \n                            model={car.model}\n                            make={car.make}\n                            trim={car.trim}\n                            fuelType={car.fueltype}\n                            year={car.year}\n                        />\n                    )}\n                </Container>\n            )\n        }\n\n    }\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}